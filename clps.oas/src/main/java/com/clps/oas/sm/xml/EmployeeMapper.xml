<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clps.oas.sm.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.clps.oas.sm.pojo.Employee">
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="employee_name" jdbcType="VARCHAR" property="employeeName" />
    <result column="employee_sex" jdbcType="VARCHAR" property="employeeSex" />
    <result column="employee_age" jdbcType="INTEGER" property="employeeAge" />
    <result column="employee_phone" jdbcType="VARCHAR" property="employeePhone" />
    <result column="employee_email" jdbcType="VARCHAR" property="employeeEmail" />
    <result column="employee_address" jdbcType="VARCHAR" property="employeeAddress" />
    <result column="employee_department" jdbcType="VARCHAR" property="employeeDepartment" />
    <result column="employee_position" jdbcType="VARCHAR" property="employeePosition" />
    <result column="employee_permission" jdbcType="VARCHAR" property="employeePermission" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
  </resultMap>
  <sql id="Base_Column_List">
    employee_id, employee_name, employee_sex, employee_age, employee_phone, employee_email, 
    employee_address, employee_department, employee_position, employee_permission, is_valid
  </sql>
  
  <!-- Query all Employee -->
   <select id="queryAllEmployee" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where is_valid = 1
  </select>
  <select id="queryEmployeeByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where employee_name like % #{employeeName,jdbcType=VARCHAR} %
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from employee
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </delete>
  <!-- <insert id="insert" parameterType="com.clps.oas.sm.pojo.Employee">
    insert into employee (employee_id, employee_name, employee_sex, 
      employee_age, employee_phone, employee_email, 
      employee_address, employee_department, employee_position, 
      employee_permission, is_valid)
    values (#{employeeId,jdbcType=INTEGER}, #{employeeName,jdbcType=VARCHAR}, #{employeeSex,jdbcType=VARCHAR}, 
      #{employeeAge,jdbcType=INTEGER}, #{employeePhone,jdbcType=VARCHAR}, #{employeeEmail,jdbcType=VARCHAR}, 
      #{employeeAddress,jdbcType=VARCHAR}, #{employeeDepartment,jdbcType=VARCHAR}, #{employeePosition,jdbcType=VARCHAR}, 
      #{employeePermission,jdbcType=VARCHAR}, #{isValid,jdbcType=INTEGER})
  </insert> -->
  <insert id="insert" parameterType="com.clps.oas.sm.pojo.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="employeeName != null">
        employee_name,
      </if>
      <if test="employeeSex != null">
        employee_sex,
      </if>
      <if test="employeeAge != null">
        employee_age,
      </if>
      <if test="employeePhone != null">
        employee_phone,
      </if>
      <if test="employeeEmail != null">
        employee_email,
      </if>
      <if test="employeeAddress != null">
        employee_address,
      </if>
      <if test="employeeDepartment != null">
        employee_department,
      </if>
      <if test="employeePosition != null">
        employee_position,
      </if>
      <if test="employeePermission != null">
        employee_permission,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="employeeName != null">
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        #{employeeSex,jdbcType=VARCHAR},
      </if>
      <if test="employeeAge != null">
        #{employeeAge,jdbcType=INTEGER},
      </if>
      <if test="employeePhone != null">
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeDepartment != null">
        #{employeeDepartment,jdbcType=VARCHAR},
      </if>
      <if test="employeePosition != null">
        #{employeePosition,jdbcType=VARCHAR},
      </if>
      <if test="employeePermission != null">
        #{employeePermission,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <!-- Logic Delete Method -->
  <update id="deleteEmployeeById" parameterType="java.lang.Integer">
    update employee
    <set>
     
        is_valid = 0
      
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  
  <update id="updateEmployee" parameterType="com.clps.oas.sm.pojo.Employee">
    update employee
    <set>
      <if test="employeeName != null">
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="employeeSex != null">
        employee_sex = #{employeeSex,jdbcType=VARCHAR},
      </if>
      <if test="employeeAge != null">
        employee_age = #{employeeAge,jdbcType=INTEGER},
      </if>
      <if test="employeePhone != null">
        employee_phone = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeEmail != null">
        employee_email = #{employeeEmail,jdbcType=VARCHAR},
      </if>
      <if test="employeeAddress != null">
        employee_address = #{employeeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeDepartment != null">
        employee_department = #{employeeDepartment,jdbcType=VARCHAR},
      </if>
      <if test="employeePosition != null">
        employee_position = #{employeePosition,jdbcType=VARCHAR},
      </if>
      <if test="employeePermission != null">
        employee_permission = #{employeePermission,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
  </update>
  
  
  <!-- Query Permission Count -->
  <select id="countByExample" resultType="java.lang.Integer" >
    select count(*) from employee
  </select>
  
  <!-- Query Permission By Paging -->
  <select id="findByPaging" parameterType="com.clps.oas.util.paging.PagingVO" resultMap="BaseResultMap">
		select 
    	<include refid="Base_Column_List" />
    	from employee
    	where is_valid = 1
	    limit #{toPage}, #{pageSize}
	</select>
</mapper>